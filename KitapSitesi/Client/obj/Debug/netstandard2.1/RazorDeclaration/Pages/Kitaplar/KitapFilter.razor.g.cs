#pragma checksum "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\Pages\Kitaplar\KitapFilter.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a64866da04df73e9fee8fac1792856a2869a047b"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace KitapSitesi.Client.Pages.Kitaplar
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using KitapSitesi.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using KitapSitesi.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using ClientClassLibrary.Helpers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using OrtakClassLibrary.Entities;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using ClientClassLibrary.Repository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using OrtakClassLibrary.DTOs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\_Imports.razor"
using ClientClassLibrary;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/kitaplar/search")]
    public partial class KitapFilter : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 44 "C:\Users\Emre\source\repos\RN-KitapSite\KitapSitesi\Client\Pages\Kitaplar\KitapFilter.razor"
       
    private List<Kitap> Kitaplar;
    private FilterKitaplarDTO filterKitaplarDTO = new FilterKitaplarDTO();
    private int totalAmountPages;
    private List<Kitaptur> Kitapturler = new List<Kitaptur>();

    protected async override Task OnInitializedAsync()
    {
        var queryStrings = navigationManager.GetQueryStrings(navigationManager.Uri);
        Kitapturler = await kitapturRepository.GetKitapturler();
        if (queryStrings != null)
        {
            FillFilterWithQueryStrings(queryStrings);
        }
        await LoadKitaplar();
    }

    private void FillFilterWithQueryStrings(Dictionary<string, string> queryStrings)
    {
        if (queryStrings.ContainsKey("kitapturId"))
        {
            filterKitaplarDTO.KitapturId = int.Parse(queryStrings["kitapturId"]);
        }

        if (queryStrings.ContainsKey("baslik"))
        {
            filterKitaplarDTO.Baslik = queryStrings["baslik"];
        }

        if (queryStrings.ContainsKey("page"))
        {
            filterKitaplarDTO.Page = int.Parse(queryStrings["page"]);
        }
    }

    private async Task SelectedPage(int page)
    {
        filterKitaplarDTO.Page = page;
        await LoadKitaplar();
    }

    private async Task LoadKitaplar()
    {
        var queryString = GenerateQueryString();
        if (!string.IsNullOrWhiteSpace(queryString))
        {
            queryString = $"?{queryString}";
            navigationManager.NavigateTo("kitaplar/search" + queryString);
        }

        var paginatedResponse = await kitaplarRepository.GetKitaplarFiltered(filterKitaplarDTO);
        Kitaplar = paginatedResponse.Response;
        totalAmountPages = paginatedResponse.TotalAmountPages;
    }

    private string GenerateQueryString()
    {
        var queryStringsDict = new Dictionary<string, string>();
        queryStringsDict["kitapturId"] = filterKitaplarDTO.KitapturId.ToString();
        queryStringsDict["baslik"] = filterKitaplarDTO.Baslik ?? "";
        queryStringsDict["kitaplistele"] = filterKitaplarDTO.KitapListele.ToString();
        queryStringsDict["page"] = filterKitaplarDTO.Page.ToString();

        var defaultValue = new List<string>() { "false", "", "0" };


        return string.Join("&", queryStringsDict
            .Where(x => !defaultValue.Contains(x.Value.ToLower()))
            .Select(x => $"{x.Key}={System.Web.HttpUtility.UrlEncode(x.Value)}").ToArray());

    }

    private async Task SearchForKitaplar()
    {
        await LoadKitaplar();
    }

    private async Task Clear()
    {
        filterKitaplarDTO.Baslik = "";
        filterKitaplarDTO.KitapturId = 0;
        filterKitaplarDTO.KitapListele = false;
        await LoadKitaplar();
    }

    private async Task TitleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SearchForKitaplar();
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IKitapturRepository kitapturRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IKitaplarRepository kitaplarRepository { get; set; }
    }
}
#pragma warning restore 1591
